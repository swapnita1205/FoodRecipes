[{"/home/justdial/FoodRecipes/frontend/src/index.js":"1","/home/justdial/FoodRecipes/frontend/src/App.js":"2","/home/justdial/FoodRecipes/frontend/src/components/Home/Home.js":"3","/home/justdial/FoodRecipes/frontend/src/components/Signup/Signup.js":"4","/home/justdial/FoodRecipes/frontend/src/components/Login/Login.js":"5","/home/justdial/FoodRecipes/frontend/src/components/AddRecipe/AddRecipe.js":"6","/home/justdial/FoodRecipes/frontend/src/components/MyRecipes/MyRecipes.js":"7","/home/justdial/FoodRecipes/frontend/src/components/Home/Recipe.js":"8","/home/justdial/FoodRecipes/frontend/src/components/Home/Alert.js":"9","/home/justdial/FoodRecipes/frontend/src/components/MyRecipes/EachRecipe.js":"10","/home/justdial/FoodRecipes/frontend/src/components/Error/Error.js":"11"},{"size":145,"mtime":1654066286313,"results":"12","hashOfConfig":"13"},{"size":818,"mtime":1654068963209,"results":"14","hashOfConfig":"13"},{"size":3678,"mtime":1654069511081,"results":"15","hashOfConfig":"13"},{"size":3442,"mtime":1654066478401,"results":"16","hashOfConfig":"13"},{"size":2901,"mtime":1654092787820,"results":"17","hashOfConfig":"13"},{"size":4311,"mtime":1654066587273,"results":"18","hashOfConfig":"13"},{"size":3345,"mtime":1654066707937,"results":"19","hashOfConfig":"13"},{"size":354,"mtime":1654067188517,"results":"20","hashOfConfig":"13"},{"size":162,"mtime":1654067209236,"results":"21","hashOfConfig":"13"},{"size":2017,"mtime":1654066718033,"results":"22","hashOfConfig":"13"},{"size":529,"mtime":1654068901191,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"6sa1cq",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/home/justdial/FoodRecipes/frontend/src/index.js",[],[],[],"/home/justdial/FoodRecipes/frontend/src/App.js",[],[],"/home/justdial/FoodRecipes/frontend/src/components/Home/Home.js",["61"],[],"import React, { useState, useEffect } from \"react\";\nimport Alert from \"./Alert\";\nimport Recipe from \"./Recipe\";\nimport Axios from \"axios\";\nimport Error from \"../Error/Error\";\nimport \"./Home.css\";\nimport { useNavigate } from \"react-router\";\nimport cookie from \"js-cookie\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Home = () => {\n  const history = useNavigate();\n\n  const [query, setQuery] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [display, setDisplay] = useState(\"\");\n\n  const location = useLocation();\n  const userId = location.state ? location.state.userId : \"\";\n  const _id = location.state ? location.state._id : 0;\n  const token = location.state ? location.state.token : \"\";\n\n  useEffect(() => {\n    if (document.cookie.substring(6) !== token) {\n      logout();\n    }\n  }, []);\n\n  const APP_ID = \"4e9f05eb\";\n  const APP_KEY = \"9b904d703fa0d46a88ce1ac63f29f498\";\n\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  const getData = async () => {\n    if (query !== \"\") {\n      const result = await Axios.get(url);\n      if (!result.data.more) {\n        return setDisplay(\"Oops!No recipe found\");\n      }\n      setRecipes(result.data.hits);\n      setQuery(\"\");\n      setDisplay(\"\");\n    } else {\n      setDisplay(\"Please fill the form\");\n    }\n  };\n\n  const logout = (e) => {\n    const userInfo = {\n      _id,\n    };\n    Axios.post(\"http://localhost:3000/users/logout\", userInfo).then(() => {\n      cookie.remove(\"token\");\n      history(\"/\", { state: { _id: _id, token: token, userId: userId } });\n    });\n  };\n\n  const myrecipes = (e) => {\n    history(\"/MyRecipes\", {\n      state: { _id: _id, token: token, userId: userId },\n    });\n  };\n\n  const addrecipes = (e) => {\n    history(\"/AddRecipes\", {\n      state: { _id: _id, token: token, userId: userId },\n    });\n  };\n\n  const deactivate = (e) => {\n    const userInfo = {\n      _id,\n      userId,\n    };\n    Axios.post(\"http://localhost:3000/recipes/deactivate\", userInfo).then(\n      (res) => {\n        if (res.data.message === \"Successfully Deleted\") {\n          Axios.post(\"http://localhost:3000/users/deactivate\", userInfo).then(\n            (res) => {\n              if (res.data.message === \"Successfully Deleted\") {\n                alert(res.data.message);\n                logout();\n              } else {\n                console.log(res.data.message);\n              }\n            }\n          );\n        } else {\n          console.log(res.data.message);\n        }\n      }\n    );\n  };\n\n  const onChange = (e) => setQuery(e.target.value);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getData();\n  };\n\n  if (!document.cookie) {\n    return <Error />;\n  }\n  return (\n    <div>\n      <button className=\"logout\" onClick={myrecipes}>\n        My Recipes\n      </button>\n      <button className=\"logout\" onClick={addrecipes}>\n        Add a Recipe\n      </button>\n      <button className=\"logout\" onClick={logout}>\n        Logout\n      </button>\n      <h1>Food Recipe Page</h1>\n      <form onSubmit={onSubmit} className=\"search-form\">\n        {display !== \"\" && <Alert alert={display} />}\n        <input\n          type=\"text\"\n          name=\"query\"\n          onChange={onChange}\n          value={query}\n          autoComplete=\"off\"\n          placeholder=\"Example: Chicken Tikka, Paneer Bhurji, ...\"\n        />\n        <input type=\"submit\" value=\"Search\" />\n      </form>\n      <div className=\"recipes\">\n        {recipes !== [] && recipes.map((recipe) => <Recipe recipe={recipe} />)}\n      </div>\n      <button className=\"delete\" onClick={deactivate}>\n        Delete Account\n      </button>\n    </div>\n  );\n};\n\nexport default Home;\n","/home/justdial/FoodRecipes/frontend/src/components/Signup/Signup.js",[],[],"/home/justdial/FoodRecipes/frontend/src/components/Login/Login.js",[],[],"/home/justdial/FoodRecipes/frontend/src/components/AddRecipe/AddRecipe.js",["62"],[],"import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"./AddRecipe.css\";\nimport cookie from \"js-cookie\";\nimport Error from \"../Error/Error\";\n\nconst AddRecipe = () => {\n  const history = useNavigate();\n  const location = useLocation();\n  const recipename = location.state ? location.state.recipename : \"\";\n  const recipedetails = location.state ? location.state.recipedetails : \"\";\n  const userId = location.state ? location.state.userId : \"\";\n  const _id = location.state ? location.state._id : 0;\n  const token = location.state ? location.state.token : \"\";\n  const flag = location.state ? location.state.flag : 0;\n\n  const [postData, setPostData] = useState({\n    RecipeName: \"\",\n    Recipe: \"\",\n  });\n\n  useEffect(() => {\n    if (document.cookie.substring(6) !== token) {\n      logout();\n    }\n    if (flag) setPostData({ RecipeName: recipename, Recipe: recipedetails });\n  }, []);\n\n  const clear = () => {\n    setPostData({ RecipeName: \"\", Recipe: \"\" });\n  };\n\n  const handleUpdateSubmit = (e) => {\n    e.preventDefault();\n    const userRecipe = {\n      userId,\n      postData,\n    };\n    Axios.post(\"http://localhost:3000/recipes/updaterecipes\", userRecipe).then(\n      (res) => {\n        if (res.data.message === \"Recipe Updated\") {\n          history(\"/MyRecipes\", {\n            state: { _id: _id, token: token, userId: userId },\n          });\n        } else {\n          alert(res.data.message);\n        }\n      }\n    );\n    clear();\n  };\n\n  const handleAddSubmit = (e) => {\n    e.preventDefault();\n    const userRecipe = {\n      userId,\n      postData,\n    };\n    Axios.post(\"http://localhost:3000/recipes/addrecipes\", userRecipe).then(\n      (res) => {\n        if (res.data.message === \"Recipe added.\") {\n          history(\"/MyRecipes\", {\n            state: { _id: _id, token: token, userId: userId },\n          });\n        } else {\n          alert(res.data.message);\n        }\n      }\n    );\n    clear();\n  };\n\n  const myrecipes = (e) => {\n    history(\"/MyRecipes\", {\n      state: { _id: _id, token: token, userId: userId },\n    });\n  };\n\n  const home = (e) => {\n    history(\"/Home\", { state: { _id: _id, token: token, userId: userId } });\n  };\n\n  const logout = (e) => {\n    Axios.post(\"http://localhost:3000/users/logout\").then(() => {\n      cookie.remove(\"token\");\n      history(\"/\", { state: { _id: _id, token: token, userId: userId } });\n    });\n  };\n\n  if (!document.cookie) {\n    return <Error />;\n  }\n  return (\n    <div>\n      <button className=\"btn\" onClick={myrecipes}>\n        My Recipes\n      </button>\n      <button className=\"btn\" onClick={home}>\n        Home\n      </button>\n      <button className=\"btn\" onClick={logout}>\n        Logout\n      </button>\n      <Paper className=\"paper\" elevation={6}>\n        <form autoComplete=\"off\" noValidate>\n          <Typography variant=\"h3\">\n            {flag ? \"Edit Your Recipe\" : \"Add Your Recipe\"}\n          </Typography>\n          <TextField\n            name=\"RecipeName\"\n            variant=\"outlined\"\n            label=\"Recipe Name\"\n            fullWidth\n            value={postData.RecipeName}\n            onChange={(e) =>\n              setPostData({ ...postData, RecipeName: e.target.value })\n            }\n          />\n          <TextField\n            name=\"Recipe\"\n            variant=\"outlined\"\n            label=\"Recipe\"\n            fullWidth\n            multiline\n            rows={4}\n            value={postData.Recipe}\n            onChange={(e) =>\n              setPostData({ ...postData, Recipe: e.target.value })\n            }\n          />\n          <Button\n            className=\"buttonsubmit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={flag ? handleUpdateSubmit : handleAddSubmit}\n            type=\"submit\"\n            fullWidth\n          >\n            Submit\n          </Button>\n          <Button\n            className=\"buttonsubmit\"\n            variant=\"contained\"\n            color=\"tertiary\"\n            size=\"large\"\n            fullWidth\n            onClick={clear}\n          >\n            Clear\n          </Button>\n        </form>\n      </Paper>\n    </div>\n  );\n};\n\nexport default AddRecipe;\n","/home/justdial/FoodRecipes/frontend/src/components/MyRecipes/MyRecipes.js",["63"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./MyRecipes.css\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { Grid } from \"@material-ui/core\";\nimport cookie from \"js-cookie\";\nimport EachRecipe from \"./EachRecipe\";\nimport Alert from \"../Home/Alert\";\nimport { v4 as uuid } from \"uuid\";\nimport Error from \"../Error/Error\";\n\nconst MyRecipes = () => {\n  const history = useNavigate();\n  const [alert, setAlert] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n\n  const location = useLocation();\n  const userId = location.state ? location.state.userId : \"\";\n  const _id = location.state ? location.state._id : 0;\n  const token = location.state ? location.state.token : \"\";\n  const [recipes, setRecipes] = useState([]);\n  const [flag, isflag] = useState(0);\n\n  useEffect(() => {\n    if (document.cookie.substring(6) !== token) {\n      logout();\n    }\n    if (!flag) {\n      Axios.post(\"http://localhost:3000/recipes/myrecipes\", {\n        userId: userId,\n      }).then((res) => {\n        setRecipes(res.data);\n      });\n    }\n  }, []);\n\n  const onChange = (e) => setQuery(e.target.value);\n\n  const addrecipe = (e) => {\n    history(\"/AddRecipes\", {\n      state: { _id: _id, token: token, userId: userId },\n    });\n  };\n\n  const home = (e) => {\n    history(\"/Home\", { state: { _id: _id, token: token, userId: userId } });\n  };\n\n  const logout = (e) => {\n    Axios.post(\"http://localhost:3000/users/logout\").then(() => {\n      cookie.remove(\"token\");\n      history(\"/\", { state: { _id: _id, token: token, userId: userId } });\n    });\n  };\n\n  const getData = async () => {\n    if (query !== \"\") {\n      isflag(1);\n      Axios.post(\"http://localhost:3000/recipes/searchrecipes\", {\n        query: query,\n        userId: userId,\n      }).then((res) => {\n        setRecipes(res.data);\n      });\n      setQuery(\"\");\n      setAlert(\"\");\n    } else {\n      setAlert(\"Please fill the form\");\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getData();\n  };\n\n  const showall = (e) => {\n    isflag(0);\n    window.location.reload(false);\n  };\n\n  if (!document.cookie) {\n    return <Error />;\n  }\n  return (\n    <div>\n      <div className=\"buttons\">\n        <button className=\"addrecipebtn\" onClick={addrecipe}>\n          Add A Recipe\n        </button>\n        <button className=\"addrecipebtn\" onClick={home}>\n          Home\n        </button>\n        <button className=\"addrecipebtn\" onClick={logout}>\n          Logout\n        </button>\n      </div>\n      <form onSubmit={onSubmit} className=\"search-my-recipe\">\n        {alert !== \"\" && <Alert alert={alert} />}\n        <input\n          type=\"text\"\n          name=\"query\"\n          onChange={onChange}\n          value={query}\n          autoComplete=\"off\"\n          placeholder=\"Type something...\"\n        />\n        <input type=\"submit\" value=\"Search\" />\n      </form>\n      <h1 className=\"title\">My Recipes</h1>\n      <button onClick={showall} className=\"showall\">\n        Show All\n      </button>\n      <Grid container alignItems=\"stretch\" spacing={5}>\n        {recipes.reverse().map((recipe) => (\n          <EachRecipe\n            key={uuid()}\n            recipe={recipe}\n            userId={userId}\n            token={token}\n          ></EachRecipe>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default MyRecipes;\n","/home/justdial/FoodRecipes/frontend/src/components/Home/Recipe.js",[],[],"/home/justdial/FoodRecipes/frontend/src/components/Home/Alert.js",[],[],"/home/justdial/FoodRecipes/frontend/src/components/MyRecipes/EachRecipe.js",[],[],"/home/justdial/FoodRecipes/frontend/src/components/Error/Error.js",[],[],{"ruleId":"64","severity":1,"message":"65","line":27,"column":6,"nodeType":"66","endLine":27,"endColumn":8,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":29,"column":6,"nodeType":"66","endLine":29,"endColumn":8,"suggestions":"69"},{"ruleId":"64","severity":1,"message":"70","line":35,"column":6,"nodeType":"66","endLine":35,"endColumn":8,"suggestions":"71"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["72"],"React Hook useEffect has missing dependencies: 'flag', 'logout', 'recipedetails', 'recipename', and 'token'. Either include them or remove the dependency array.",["73"],"React Hook useEffect has missing dependencies: 'flag', 'logout', 'token', and 'userId'. Either include them or remove the dependency array.",["74"],{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [logout, token]",{"range":"81","text":"82"},"Update the dependencies array to be: [flag, logout, recipedetails, recipename, token]",{"range":"83","text":"84"},"Update the dependencies array to be: [flag, logout, token, userId]",{"range":"85","text":"86"},[820,822],"[logout, token]",[1046,1048],"[flag, logout, recipedetails, recipename, token]",[1097,1099],"[flag, logout, token, userId]"]