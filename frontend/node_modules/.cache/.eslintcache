[{"C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\index.js":"1","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\App.js":"2","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Signup\\Signup.js":"3","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\AddRecipe\\AddRecipe.js":"4","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Login\\Login.js":"5","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Home\\Home.js":"6","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\MyRecipes\\MyRecipes.js":"7","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\MyRecipes\\RecipeDetail.js":"8","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Home\\Recipe.js":"9","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Home\\MySelectedRecipes.js":"10","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Home\\Alert.js":"11","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\MyRecipes\\EachRecipe.js":"12","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Error\\Error.js":"13","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Header\\Header.js":"14","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Home\\EachSelectedRecipe\\EachSelectedRecipe.js":"15"},{"size":145,"mtime":1654066286000,"results":"16","hashOfConfig":"17"},{"size":950,"mtime":1654440032000,"results":"18","hashOfConfig":"17"},{"size":3575,"mtime":1654510632000,"results":"19","hashOfConfig":"17"},{"size":4835,"mtime":1654502434000,"results":"20","hashOfConfig":"17"},{"size":2914,"mtime":1654588160000,"results":"21","hashOfConfig":"17"},{"size":2904,"mtime":1654515336000,"results":"22","hashOfConfig":"17"},{"size":3020,"mtime":1654513958000,"results":"23","hashOfConfig":"17"},{"size":2378,"mtime":1654502568000,"results":"24","hashOfConfig":"17"},{"size":319,"mtime":1654273286000,"results":"25","hashOfConfig":"17"},{"size":1359,"mtime":1654513316000,"results":"26","hashOfConfig":"17"},{"size":170,"mtime":1654513212000,"results":"27","hashOfConfig":"17"},{"size":2558,"mtime":1654513946000,"results":"28","hashOfConfig":"17"},{"size":371,"mtime":1654416920000,"results":"29","hashOfConfig":"17"},{"size":2288,"mtime":1654443480000,"results":"30","hashOfConfig":"17"},{"size":913,"mtime":1654583036000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cb56mn",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},"C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\index.js",[],[],"C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\App.js",[],[],"C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Signup\\Signup.js",[],[],"C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\AddRecipe\\AddRecipe.js",["85"],[],"import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport FileBase from \"react-file-base64\";\nimport \"./AddRecipe.css\";\nimport cookie from \"js-cookie\";\nimport Error from \"../Error/Error\";\nimport Header from \"../Header/Header\";\n\nconst AddRecipe = () => {\n  const history = useNavigate();\n  const location = useLocation();\n  const recipename = location.state ? location.state.recipename : \"\";\n  const recipedetails = location.state ? location.state.recipedetails : \"\";\n  const selectedFile = location.state ? location.state.selectedFile : \"\";\n  const userId = location.state ? location.state.userId : \"\";\n  const _id = location.state ? location.state._id : 0;\n  const token = location.state ? location.state.token : \"\";\n  const flag = location.state ? location.state.flag : 0;\n  const name = location.state ? location.state.name : \"\";\n\n  const [postData, setPostData] = useState({\n    RecipeName: \"\",\n    Recipe: \"\",\n    selectedFile: \"\",\n  });\n\n  useEffect(() => {\n    if (document.cookie.substring(6) !== token) {\n      logout();\n    }\n    if (flag)\n      setPostData({\n        RecipeName: recipename,\n        Recipe: recipedetails,\n        selectedFile: selectedFile,\n      });\n  }, []);\n\n  const clear = () => {\n    setPostData({ RecipeName: \"\", Recipe: \"\", selectedFile: \"\" });\n  };\n\n  const handleUpdateSubmit = (e) => {\n    e.preventDefault();\n    const userRecipe = {\n      userId,\n      postData,\n    };\n    Axios.post(\"http://localhost:3000/recipes/updaterecipes\", userRecipe).then(\n      (res) => {\n        if (res.data.message === \"Recipe Updated\") {\n          history(\"/MyRecipes\", {\n            state: { _id: _id, token: token, userId: userId, name: name },\n          });\n        } else {\n          alert(res.data.message);\n        }\n      }\n    );\n    clear();\n  };\n\n  const handleAddSubmit = (e) => {\n    e.preventDefault();\n    const userRecipe = {\n      userId,\n      postData,\n    };\n    if (postData.RecipeName && postData.Recipe && postData.selectedFile) {\n      Axios.post(\"http://localhost:3000/recipes/addrecipes\", userRecipe).then(\n        (res) => {\n          if (res.data.message === \"Recipe added.\") {\n            history(\"/MyRecipes\", {\n              state: { _id: _id, token: token, userId: userId, name: name },\n            });\n          } else {\n            alert(res.data.message);\n          }\n        }\n      );\n    } else {\n      alert(\"Please fill the specified fields\");\n    }\n    clear();\n  };\n\n  const logout = (e) => {\n    Axios.post(\"http://localhost:3000/users/logout\").then(() => {\n      cookie.remove(\"token\");\n      history(\"/\", {\n        state: { _id: _id, token: token, userId: userId, name: name },\n      });\n    });\n  };\n\n  if (!document.cookie) {\n    return <Error />;\n  }\n  return (\n    <div>\n      <Header _id={_id} userId={userId} token={token} name={name} />\n      <Paper className=\"paper\" elevation={6}>\n        <form autoComplete=\"off\" noValidate>\n          <Typography variant=\"h3\">\n            {flag ? \"Edit Your Recipe\" : \"Add Your Recipe\"}\n          </Typography>\n          <TextField\n            name=\"RecipeName\"\n            variant=\"outlined\"\n            label=\"Recipe Name\"\n            className=\"field1\"\n            fullWidth\n            required\n            value={postData.RecipeName}\n            onChange={(e) =>\n              setPostData({ ...postData, RecipeName: e.target.value })\n            }\n          />\n          <TextField\n            name=\"Recipe\"\n            variant=\"outlined\"\n            label=\"Recipe\"\n            className=\"field2\"\n            fullWidth\n            multiline\n            required\n            rows={4}\n            value={postData.Recipe}\n            onChange={(e) =>\n              setPostData({ ...postData, Recipe: e.target.value })\n            }\n          />\n          <div>\n            <FileBase\n              type=\"file\"\n              multiple={false}\n              value={postData.selectedFile}\n              onDone={({ base64 }) =>\n                setPostData({ ...postData, selectedFile: base64 })\n              }\n            />\n          </div>\n          <Button\n            className=\"buttonsubmit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={flag ? handleUpdateSubmit : handleAddSubmit}\n            type=\"submit\"\n            fullWidth\n          >\n            Submit\n          </Button>\n          <Button\n            className=\"buttonsubmit\"\n            variant=\"contained\"\n            color=\"tertiary\"\n            size=\"large\"\n            fullWidth\n            onClick={clear}\n          >\n            Clear\n          </Button>\n        </form>\n      </Paper>\n    </div>\n  );\n};\n\nexport default AddRecipe;\n","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Login\\Login.js",[],[],"C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Home\\Home.js",["86","87"],[],"import React, { useState, useEffect } from \"react\";\nimport Alert from \"./Alert\";\nimport Recipe from \"./Recipe\";\nimport Axios from \"axios\";\nimport Error from \"../Error/Error\";\nimport \"./Home.css\";\nimport { useNavigate } from \"react-router\";\nimport cookie from \"js-cookie\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"../Header/Header\";\nimport MySelectedRecipes from \"./MySelectedRecipes\";\n\nconst Home = () => {\n  const history = useNavigate();\n\n  const [query, setQuery] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [display, setDisplay] = useState(\"\");\n\n  const location = useLocation();\n  const userId = location.state ? location.state.userId : \"\";\n  const _id = location.state ? location.state._id : 0;\n  const token = location.state ? location.state.token : \"\";\n  const name = location.state ? location.state.name : \"\";\n\n  useEffect(() => {\n    if (document.cookie.substring(6) !== token) {\n      logout();\n    }\n  }, []);\n\n  const APP_ID = \"4e9f05eb\";\n  const APP_KEY = \"9b904d703fa0d46a88ce1ac63f29f498\";\n\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  const getData = async () => {\n    if (query !== \"\") {\n      const result = await Axios.get(url);\n      if (!result.data.more) {\n        return setDisplay(\"Oops! No recipe found\");\n      }\n      setRecipes(result.data.hits);\n      setQuery(\"\");\n      setDisplay(\"\");\n    } else {\n      setDisplay(\"Please fill the form\");\n    }\n  };\n\n  const logout = (e) => {\n    const userInfo = {\n      _id,\n    };\n    Axios.post(\"http://localhost:3000/users/logout\", userInfo).then(() => {\n      cookie.remove(\"token\");\n      history(\"/\", {\n        state: { _id: _id, token: token, userId: userId, name: name },\n      });\n    });\n  };\n\n  const onChange = (e) => setQuery(e.target.value);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getData();\n  };\n\n  if (!document.cookie) {\n    return <Error />;\n  }\n  return (\n    <div>\n      <Header _id={_id} userId={userId} token={token} name={name} />\n      <div className=\"container\">\n        <h1 className=\"h1home\">Find a Recipe</h1>\n        <form onSubmit={onSubmit} className=\"search-form\">\n          {display !== \"\" && <Alert display={display} />}\n          <input\n            type=\"text\"\n            name=\"query\"\n            onChange={onChange}\n            value={query}\n            autoComplete=\"off\"\n            placeholder=\"  Example:  Chicken Tikka,  Paneer Bhurji, ...\"\n          />\n          <input type=\"submit\" value=\"Search\" />\n        </form>\n      </div>\n      {recipes.length == 0 && (\n        <MySelectedRecipes\n          userId={userId}\n          _id={_id}\n          name={name}\n          token={token}\n        />\n      )}\n      <div className=\"recipes\">\n        {recipes !== [] && recipes.map((recipe) => <Recipe recipe={recipe} />)}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\MyRecipes\\MyRecipes.js",["88"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./MyRecipes.css\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { Grid } from \"@material-ui/core\";\nimport cookie from \"js-cookie\";\nimport EachRecipe from \"./EachRecipe\";\nimport Alert from \"../Home/Alert\";\nimport { v4 as uuid } from \"uuid\";\nimport Error from \"../Error/Error\";\nimport Header from \"../Header/Header\";\n\nconst MyRecipes = () => {\n  const history = useNavigate();\n  const [display, setDisplay] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n\n  const location = useLocation();\n  const userId = location.state ? location.state.userId : \"\";\n  const _id = location.state ? location.state._id : 0;\n  const token = location.state ? location.state.token : \"\";\n  const name = location.state ? location.state.name : \"\";\n  const [recipes, setRecipes] = useState([]);\n  const [flag, isflag] = useState(0);\n\n  useEffect(() => {\n    if (document.cookie.substring(6) !== token) {\n      logout();\n    }\n    if (!flag) {\n      Axios.post(\"http://localhost:3000/recipes/myrecipes\", {\n        userId: userId,\n      }).then((res) => {\n        setRecipes(res.data);\n      });\n    }\n  }, []);\n\n  const onChange = (e) => setQuery(e.target.value);\n\n  const logout = (e) => {\n    Axios.post(\"http://localhost:3000/users/logout\").then(() => {\n      cookie.remove(\"token\");\n      history(\"/\", {\n        state: { _id: _id, token: token, userId: userId, name: name },\n      });\n    });\n  };\n\n  const getData = async () => {\n    if (query !== \"\") {\n      isflag(1);\n      Axios.post(\"http://localhost:3000/recipes/searchrecipes\", {\n        query: query,\n        userId: userId,\n      }).then((res) => {\n        setRecipes(res.data);\n      });\n      setQuery(\"\");\n      setDisplay(\"\");\n    } else {\n      setDisplay(\"Please fill the form\");\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getData();\n  };\n\n  const showall = (e) => {\n    isflag(0);\n    window.location.reload(false);\n  };\n\n  if (!document.cookie) {\n    return <Error />;\n  }\n  return (\n    <div>\n      <Header _id={_id} userId={userId} token={token} name={name} />\n      <h1 className=\"title\">My Recipes</h1>\n      <form onSubmit={onSubmit} className=\"search-my-recipe\">\n        {display !== \"\" && <Alert display={display} />}\n        <input\n          type=\"text\"\n          name=\"query\"\n          onChange={onChange}\n          value={query}\n          autoComplete=\"off\"\n          placeholder=\"Type something...\"\n        />\n        <input type=\"submit\" value=\"Search\" />\n      </form>\n      <button onClick={showall} className=\"showall\">\n        Show All\n      </button>\n      <Grid container alignItems=\"stretch\" spacing={5}>\n        {recipes.map((recipe) => (\n          <EachRecipe\n            key={uuid()}\n            recipe={recipe}\n            userId={userId}\n            token={token}\n            name={name}\n            _id={_id}\n          ></EachRecipe>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default MyRecipes;\n","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\MyRecipes\\RecipeDetail.js",["89"],[],"import React from \"react\";\nimport { useNavigate, useLocation } from \"react-router\";\nimport Header from \"../Header/Header\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport Axios from \"axios\";\n\nconst RecipeDetail = () => {\n  const history = useNavigate();\n  const location = useLocation();\n  const userId = location.state ? location.state.userId : \"\";\n  const _id = location.state ? location.state._id : 0;\n  const token = location.state ? location.state.token : \"\";\n  const selectedFile = location.state ? location.state.selectedFile : \"\";\n  const name = location.state ? location.state.name : \"\";\n  const recipename = location.state ? location.state.recipename : \"\";\n  const recipedetails = location.state ? location.state.recipedetails : \"\";\n\n  const handleDelete = (e, recipename) => {\n    const userInfo = {\n      userId,\n      recipename,\n    };\n    Axios.post(\"http://localhost:3000/recipes/delete\", userInfo).then((res) => {\n      if (res.data.message === \"Successfully Deleted\") {\n        alert(res.data.message);\n        history(\"/MyRecipes\", {\n          state: { userId: userId, token: token, name: name },\n        });\n      } else {\n        console.log(res.data.message);\n      }\n    });\n  };\n  const handleUpdate = (e, recipename, recipedetails, selectedFile) => {\n    history(\"/AddRecipes\", {\n      state: {\n        userId: userId,\n        token: token,\n        name: name,\n        recipename: recipename,\n        recipedetails: recipedetails,\n        selectedFile: selectedFile,\n        flag: 1,\n      },\n    });\n  };\n  return (\n    <div>\n      <Header _id={_id} userId={userId} token={token} name={name} />\n      <h1 className=\"recipedetname\">{recipename}</h1>\n      <img className=\"recipedetselectedimage\" src={selectedFile} />\n      <h2 className=\"recipedetdetails\">{recipedetails}</h2>\n      <Stack spacing={2} direction=\"row\" className=\"recipedetstack\">\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          className=\"recipedetdelete\"\n          onClick={(e) => handleDelete(e, recipename)}\n        >\n          Delete\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(e) => handleUpdate(e, recipename, recipedetails)}\n        >\n          Update\n        </Button>\n      </Stack>\n    </div>\n  );\n};\n\nexport default RecipeDetail;\n","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Home\\Recipe.js",[],[],"C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Home\\MySelectedRecipes.js",["90"],[],"import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router\";\nimport EachSelectedRecipe from \"./EachSelectedRecipe/EachSelectedRecipe\";\nimport { Grid } from \"@material-ui/core\";\nimport { v4 as uuid } from \"uuid\";\n\nconst MySelectedRecipes = ({ userId, _id, name, token }) => {\n  const history = useNavigate();\n  const [selectedrecipes, setselectedRecipes] = useState([]);\n  useEffect(() => {\n    Axios.post(\"http://localhost:3000/recipes/myrecipes\", {\n      userId: userId,\n    }).then((res) => {\n      setselectedRecipes(res.data);\n    });\n  }, []);\n\n  const myrecipes = (e) => {\n    history(\"/MyRecipes\", {\n      state: { _id: _id, token: token, userId: userId, name: name },\n    });\n  };\n\n  return (\n    <div>\n      <h1 className=\"myselectedrecipes\">My Recipes</h1>\n      <b onClick={myrecipes} className=\"viewmore\">\n        View more...\n      </b>\n      <Grid container alignItems=\"stretch\" spacing={5}>\n        {selectedrecipes\n          .slice(0, 4)\n          .map((recipe) => (\n            <EachSelectedRecipe\n              key={uuid()}\n              recipe={recipe}\n              userId={userId}\n              token={token}\n              name={name}\n              _id={_id}\n            ></EachSelectedRecipe>\n          ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default MySelectedRecipes;\n","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Home\\Alert.js",[],[],"C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\MyRecipes\\EachRecipe.js",["91","92"],[],"import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\n\nconst EachRecipe = ({ recipe, userId, token, name, _id }) => {\n  const history = useNavigate();\n\n  const toggleReadMore = () => {\n    history(\"/RecipeDetail\", {\n      state: {\n        recipename: recipe.recipename,\n        recipedetails: recipe.recipedetails,\n        selectedFile: recipe.selectedFile,\n        userId: userId,\n        token: token,\n        name: name,\n        _id: _id,\n      },\n    });\n  };\n\n  const handleDelete = (e, recipename) => {\n    const userInfo = {\n      userId,\n      recipename,\n    };\n    Axios.post(\"http://localhost:3000/recipes/delete\", userInfo).then((res) => {\n      if (res.data.message === \"Successfully Deleted\") {\n        alert(res.data.message);\n        window.location.reload(false);\n        history(\"/MyRecipes\", {\n          state: { userId: userId, token: token, name: name },\n        });\n      } else {\n        console.log(res.data.message);\n      }\n    });\n  };\n\n  const handleUpdate = (e, recipename, recipedetails, selectedFile) => {\n    history(\"/AddRecipes\", {\n      state: {\n        userId: userId,\n        token: token,\n        name: name,\n        recipename: recipename,\n        recipedetails: recipedetails,\n        selectedFile: selectedFile,\n        flag: 1,\n      },\n    });\n  };\n\n  return (\n    <div className=\"recipeDiv\">\n      <Grid key={recipe._id} item>\n        <img className=\"selectedimage\"\n          src={recipe.selectedFile}\n        />\n        <h2 className=\"recipename\">{recipe.recipename}</h2>\n        <p className=\"recipedetails\">\n          {recipe.recipedetails.slice(0, 150)}\n          {recipe.recipedetails.length > 150 && (\n            <span className=\"readmore\" onClick={toggleReadMore}>\n              ...read more\n            </span>\n          )}\n        </p>\n        <Stack spacing={2} direction=\"row\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={(e) => handleDelete(e, recipe.recipename)}\n          >\n            Delete\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) =>\n              handleUpdate(e, recipe.recipename, recipe.recipedetails, recipe.selectedFile)\n            }\n          >\n            Update\n          </Button>\n        </Stack>\n      </Grid>\n    </div>\n  );\n};\n\nexport default EachRecipe;\n","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Error\\Error.js",[],[],"C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Header\\Header.js",["93","94","95","96","97"],[],"import React from \"react\";\nimport \"./Header.css\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router\";\nimport cookie from \"js-cookie\";\n\nconst Header = ({ _id, token, userId, name }) => {\n  const history = useNavigate();\n\n  const logout = (e) => {\n    const userInfo = {\n      _id,\n    };\n    Axios.post(\"http://localhost:3000/users/logout\", userInfo).then(() => {\n      cookie.remove(\"token\");\n      history(\"/\", {\n        state: { _id: _id, token: token, userId: userId, name: name },\n      });\n    });\n  };\n\n  const myrecipes = (e) => {\n    history(\"/MyRecipes\", {\n      state: { _id: _id, token: token, userId: userId, name: name },\n    });\n  };\n\n  const addrecipes = (e) => {\n    history(\"/AddRecipes\", {\n      state: { _id: _id, token: token, userId: userId, name: name },\n    });\n  };\n\n  const home = (e) => {\n    history(\"/Home\", {\n      state: { _id: _id, token: token, userId: userId, name: name },\n    });\n  };\n\n  const deactivate = (e) => {\n    const userInfo = {\n      _id,\n      userId,\n    };\n    Axios.post(\"http://localhost:3000/recipes/deactivate\", userInfo).then(\n      (res) => {\n        if (res.data.message === \"Successfully Deleted\") {\n          Axios.post(\"http://localhost:3000/users/deactivate\", userInfo).then(\n            (res) => {\n              if (res.data.message === \"Successfully Deleted\") {\n                alert(\"Your account is deactivated now!\");\n                logout();\n              } else {\n                console.log(res.data.message);\n              }\n            }\n          );\n        } else {\n          console.log(res.data.message);\n        }\n      }\n    );\n  };\n\n  return (\n    <header>\n      <nav className=\"main-nav\">\n        <h1 className=\"username\">Hey, {name}!</h1>\n        <ul className=\"navlinks\">\n          <li>\n            <a onClick={addrecipes}>Add a Recipe</a>\n          </li>\n          <li>\n            <a onClick={myrecipes}>My Recipes</a>\n          </li>\n          <li>\n            <a onClick={home}>Home</a>\n          </li>\n          <li>\n            <a onClick={logout}>Logout</a>\n          </li>\n          <li>\n            <a onClick={deactivate} className=\"deactivated\">\n              Deactivate\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","C:\\Users\\LENOVO\\Downloads\\FoodRecipes\\frontend\\src\\components\\Home\\EachSelectedRecipe\\EachSelectedRecipe.js",["98"],[],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./EachSelectedRecipe.css\";\n\nconst EachSelectedRecipe = ({ recipe, userId, token, name, _id }) => {\n  const history = useNavigate();\n\n  const toggleReadMore = () => {\n    history(\"/RecipeDetail\", {\n      state: {\n        recipename: recipe.recipename,\n        recipedetails: recipe.recipedetails,\n        selectedFile: recipe.selectedFile,\n        userId: userId,\n        token: token,\n        name: name,\n        _id: _id,\n      },\n    });\n  };\n\n  return (\n    <div className=\"recipeselectedDiv\">\n      <Grid key={recipe._id} item>\n        <img className=\"recipeselectedimage\"\n          src={recipe.selectedFile}\n          onClick={toggleReadMore}\n        />\n        <h2 className=\"recipename\">{recipe.recipename}</h2>\n      </Grid>\n    </div>\n  );\n};\n\nexport default EachSelectedRecipe;\n",{"ruleId":"99","severity":1,"message":"100","line":39,"column":6,"nodeType":"101","endLine":39,"endColumn":8,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":30,"column":6,"nodeType":"101","endLine":30,"endColumn":8,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":91,"column":23,"nodeType":"107","messageId":"108","endLine":91,"endColumn":25},{"ruleId":"99","severity":1,"message":"109","line":37,"column":6,"nodeType":"101","endLine":37,"endColumn":8,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":52,"column":7,"nodeType":"113","endLine":52,"endColumn":68},{"ruleId":"99","severity":1,"message":"114","line":17,"column":6,"nodeType":"101","endLine":17,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"112","line":60,"column":9,"nodeType":"113","endLine":62,"endColumn":11},{"ruleId":"120","severity":1,"message":"121","line":71,"column":13,"nodeType":"113","endLine":71,"endColumn":37},{"ruleId":"120","severity":1,"message":"121","line":74,"column":13,"nodeType":"113","endLine":74,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":77,"column":13,"nodeType":"113","endLine":77,"endColumn":31},{"ruleId":"120","severity":1,"message":"121","line":80,"column":13,"nodeType":"113","endLine":80,"endColumn":33},{"ruleId":"120","severity":1,"message":"121","line":83,"column":13,"nodeType":"113","endLine":83,"endColumn":61},{"ruleId":"111","severity":1,"message":"112","line":26,"column":9,"nodeType":"113","endLine":29,"endColumn":11},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'flag', 'logout', 'recipedetails', 'recipename', 'selectedFile', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has missing dependencies: 'logout' and 'token'. Either include them or remove the dependency array.",["123"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'flag', 'logout', 'token', and 'userId'. Either include them or remove the dependency array.",["124"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["125"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [flag, logout, recipedetails, recipename, selectedFile, token]",{"range":"134","text":"135"},"Update the dependencies array to be: [logout, token]",{"range":"136","text":"137"},"Update the dependencies array to be: [flag, logout, token, userId]",{"range":"138","text":"139"},"Update the dependencies array to be: [userId]",{"range":"140","text":"141"},[1346,1348],"[flag, logout, recipedetails, recipename, selectedFile, token]",[970,972],"[logout, token]",[1198,1200],"[flag, logout, token, userId]",[606,608],"[userId]"]